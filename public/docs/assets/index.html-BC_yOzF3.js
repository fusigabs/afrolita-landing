import{_ as i}from"./builder-init-BVAanhrz.js";import{_ as o,e as r,f as e,g as p,h as s,i as l,r as c,o as d,j as t}from"./app-txVdz_ru.js";const u={},h={class:"table-of-contents"};function m(g,a){const n=c("router-link");return d(),r("div",null,[a[5]||(a[5]=e("h1",{id:"get-started",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#get-started"},[e("span",null,"Get Started")])],-1)),e("nav",h,[e("ul",null,[e("li",null,[s(n,{to:"#introduction"},{default:l(()=>a[0]||(a[0]=[t("Introduction")])),_:1})]),e("li",null,[s(n,{to:"#server-requirements"},{default:l(()=>a[1]||(a[1]=[t("Server requirements")])),_:1})]),e("li",null,[s(n,{to:"#download"},{default:l(()=>a[2]||(a[2]=[t("Download")])),_:1})]),e("li",null,[s(n,{to:"#installation"},{default:l(()=>a[3]||(a[3]=[t("Installation")])),_:1})]),e("li",null,[s(n,{to:"#deployment"},{default:l(()=>a[4]||(a[4]=[t("Deployment")])),_:1})])])]),a[6]||(a[6]=p(`<h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction"><span>Introduction</span></a></h2><p><strong>ZioraCMS</strong> is a Laravel-powered drag-and-drop page builder. It comes with a clean page builder out-of-the-box, but also allows users to develop new components, easily generated with a single command. It is build on top of the <strong>VILT</strong> stack: <a href="https://vuejs.org" target="_blank" rel="noopener noreferrer">Vue v3</a>, <a href="https://inertiajs.com/" target="_blank" rel="noopener noreferrer">Inertia js v1</a>, <a href="https://laravel.com" target="_blank" rel="noopener noreferrer">Laravel v12+</a> and <a href="https://tailwindcss.com" target="_blank" rel="noopener noreferrer">Tailwind css v4</a>. We&#39;re also using <a href="https://ui.nuxt.com" target="_blank" rel="noopener noreferrer">NuxtUI</a> components.</p><h2 id="server-requirements" tabindex="-1"><a class="header-anchor" href="#server-requirements"><span>Server requirements</span></a></h2><p>As this is a Laravel-based application, your server must meet the minimum requirements for running a Laravel 12+ application. See a full list of requirements on the <a href="https://laravel.com/docs/12.x/deployment#server-requirements" target="_blank" rel="noopener noreferrer">Laravel website here</a>.</p><h2 id="download" tabindex="-1"><a class="header-anchor" href="#download"><span>Download</span></a></h2><p>ZioraCMS is distributed exclusively through <a href="https://anystack.sh/" target="_blank" rel="noopener noreferrer">AnyStack</a>. Once you purchase a license, all you have to do it login to the platform and click on the <strong>Download</strong> link to download the package. Note that you will only be able to download versions up to the year when your license expires.</p><h2 id="installation" tabindex="-1"><a class="header-anchor" href="#installation"><span>Installation</span></a></h2><p>The installation process does not require entering the license key. Once downloaded, proceed to install as follows:</p><div class="hint-container info"><p class="hint-container-title">Info</p><p>ZioraCMS cannot be installed in an existing application. It should be used to create a brand new application.</p></div><ul><li>Download the application package and unzip in the location where you want to develop your Laravel app.</li><li>Copy the <code>.env.example</code> file to <code>.env</code></li></ul><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">cp</span> .env.example .env</span>
<span class="line"></span></code></pre></div><ul><li>Open the newly created <code>.env</code> file and enter your database credentials. The application is written and tested for <code>MySQL</code> and <code>SQLite</code>. eg For MySQL, you need to configure the following:</li></ul><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token assign-left variable">DB_HOST</span><span class="token operator">=</span><span class="token number">127.0</span>.0.1</span>
<span class="line"><span class="token assign-left variable">DB_PORT</span><span class="token operator">=</span><span class="token number">3306</span></span>
<span class="line"><span class="token assign-left variable">DB_DATABASE</span><span class="token operator">=</span>database_name</span>
<span class="line"><span class="token assign-left variable">DB_USERNAME</span><span class="token operator">=</span>forge</span>
<span class="line"><span class="token assign-left variable">DB_PASSWORD</span><span class="token operator">=</span>dasasasasa</span>
<span class="line"></span></code></pre></div><ul><li>In the application folder, install the composer packages:</li></ul><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">composer</span> update</span>
<span class="line"></span></code></pre></div><ul><li>Install Node modules</li></ul><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">npm</span> <span class="token function">install</span></span>
<span class="line"></span></code></pre></div><ul><li>Generate laravel application key</li></ul><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">php artisan key:generate</span>
<span class="line"></span></code></pre></div><ul><li>Initialize Ziora CMS by creating roles, permissions and an admin user</li></ul><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">php artisan builder:init</span>
<span class="line"></span></code></pre></div><p>This command will seed the database roles and permissions, and provide an interactive prompt to create an admin user. <img src="`+i+`" alt="Builder init"></p><ul><li>Link the storage folder.</li></ul><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">php artisan storage:link</span>
<span class="line"></span></code></pre></div><p>In this version of ZioraCMS, files are stored in a local disk, but as this is just a laravel application, you can configure other file storage as necessary. See <a href="https://laravel.com/docs/12.x/filesystem#main-content" target="_blank" rel="noopener noreferrer">Laravel&#39;s official documentation</a> on how to configure file storage.</p><ul><li>Run the development server</li></ul><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">composer</span> dev</span>
<span class="line"></span></code></pre></div><ul><li>Go to your site URL and it should display a welcome page. Note that when the application is first created and before you choose a front page, this Welcome page is displayed as a fallback. But once a front page is set in the Admin panel, it will override the Welcome page as the home URL.</li></ul><h2 id="deployment" tabindex="-1"><a class="header-anchor" href="#deployment"><span>Deployment</span></a></h2><p>Again since this is a regular Inertia.js application, you can follow normal recommended Laravel deployment options. Generally this is the command to build the application in production:</p><ul><li>If you intend to run SSR, then build for SSR:</li></ul><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">npm</span> run build:ssr</span>
<span class="line"></span></code></pre></div><p>You can read more about <a href="https://inertiajs.com/server-side-rendering" target="_blank" rel="noopener noreferrer">Inertiajs SSR here</a></p><ul><li>If you do not need SSR, build the client-side bundle:</li></ul><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">npm</span> run build</span>
<span class="line"></span></code></pre></div><p>If deploying in <a href="https://forge.laravel.com" target="_blank" rel="noopener noreferrer">Laravel forge</a>, this is an example deploy script (for SSR):</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token builtin class-name">cd</span> /home/forge/mywebsite.com</span>
<span class="line"><span class="token function">git</span> pull origin <span class="token variable">$FORGE_SITE_BRANCH</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$FORGE_COMPOSER</span> <span class="token function">install</span> --no-dev --no-interaction --prefer-dist --optimize-autoloader</span>
<span class="line"></span>
<span class="line"><span class="token punctuation">(</span> flock <span class="token parameter variable">-w</span> <span class="token number">10</span> <span class="token number">9</span> <span class="token operator">||</span> <span class="token builtin class-name">exit</span> <span class="token number">1</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&#39;Reloading PHP FPM...&#39;</span><span class="token punctuation">;</span> <span class="token function">sudo</span> <span class="token parameter variable">-S</span> <span class="token function">service</span> <span class="token variable">$FORGE_PHP_FPM</span> reload <span class="token punctuation">)</span> <span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span>/tmp/fpmlock</span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-f</span> artisan <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token variable">$FORGE_PHP</span> artisan migrate <span class="token parameter variable">--force</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line highlighted"><span class="token function">npm</span> ci </span>
<span class="line highlighted"><span class="token function">npm</span> run build:ssr</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,37))])}const b=o(u,[["render",m],["__file","index.html.vue"]]),k=JSON.parse('{"path":"/","title":"Get Started","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Introduction","slug":"introduction","link":"#introduction","children":[]},{"level":2,"title":"Server requirements","slug":"server-requirements","link":"#server-requirements","children":[]},{"level":2,"title":"Download","slug":"download","link":"#download","children":[]},{"level":2,"title":"Installation","slug":"installation","link":"#installation","children":[]},{"level":2,"title":"Deployment","slug":"deployment","link":"#deployment","children":[]}],"git":{"updatedTime":1751427734000,"contributors":[{"name":"Neba Funwi-gabga","username":"","email":"fgneba@gmail.com","commits":1}],"changelog":[{"hash":"2e7db0b05e4876131bdc943413d4e63bf608f6bc","time":1751427734000,"email":"fgneba@gmail.com","author":"Neba Funwi-gabga","message":"first commit"}]},"filePathRelative":"README.md"}');export{b as comp,k as data};
